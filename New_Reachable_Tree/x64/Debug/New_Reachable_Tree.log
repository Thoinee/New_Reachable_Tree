  main.cpp
d:\secretfile\code\new_reachable_tree\new_reachable_tree\input.h(62): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(96): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(125): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(126): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\petri.h(91): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\petri.h(92): warning C4267: “=”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\petri.h(148): warning C4267: “=”: 从“size_t”转换到“short”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\petri.h(182): warning C4244: “初始化”: 从“__int64”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\petri.h(527): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\petri.h(559): warning C4244: “=”: 从“double”转换到“float”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\output.h(372): warning C4244: “参数”: 从“float”转换到“const int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\output.h(379): warning C4244: “参数”: 从“double”转换到“float”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\output.h(461): warning C4267: “+=”: 从“size_t”转换到“unsigned long”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\output.h(463): warning C4267: “+=”: 从“size_t”转换到“unsigned long”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\main.cpp(18): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\main.cpp(19): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\main.cpp(20): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\output.h(305): warning C4244: “参数”: 从“const _Ty”转换到“const _Ty”，可能丢失数据
          with
          [
              _Ty=int
          ]
          and
          [
              _Ty=float
          ]
  d:\secretfile\code\new_reachable_tree\new_reachable_tree\output.h(344): note: 参见对正在编译的函数 模板 实例化“std::vector<float,std::allocator<_Ty>> toVector<float>(const ptrNode,const int,const std::vector<int,std::allocator<int>> &)”的引用
          with
          [
              _Ty=float
          ]
c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\type_traits(16707566): warning C4267: “参数”: 从“size_t”转换到“int”，可能丢失数据
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\type_traits(16707566): note: 参见对正在编译的函数 模板 实例化“void std::_Invoker_functor::_Call<void(__cdecl *)(PetriNet &,int),_Ty,unsigned __int64>(_Callable &&,_Ty &&,unsigned __int64 &&) noexcept(false)”的引用
          with
          [
              _Ty=std::reference_wrapper<PetriNet>,
              _Callable=void (__cdecl *)(PetriNet &,int)
          ]
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\thr\xthread(237): note: 参见对正在编译的函数 模板 实例化“void std::invoke<void(__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>(_Callable &&,std::reference_wrapper<PetriNet> &&,unsigned __int64 &&) noexcept(false)”的引用
          with
          [
              _Callable=void (__cdecl *)(PetriNet &,int)
          ]
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\thr\xthread(246): note: 参见对正在编译的函数 模板 实例化“void std::_LaunchPad<_Target>::_Execute<0,1,2>(std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64> &,std::integer_sequence<unsigned __int64,0,1,2>)”的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,std::default_delete<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\thr\xthread(245): note: 参见对正在编译的函数 模板 实例化“void std::_LaunchPad<_Target>::_Execute<0,1,2>(std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64> &,std::integer_sequence<unsigned __int64,0,1,2>)”的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,std::default_delete<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\thr\xthread(242): note: 编译 类 模板 成员函数 "void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept" 时
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,std::default_delete<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\thr\xthread(230): note: 参见对正在编译的函数 模板 实例化“void std::_LaunchPad<_Target>::_Run(std::_LaunchPad<_Target> *) noexcept”的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,std::default_delete<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\thr\xthread(257): note: 参见对正在编译的 类 模板 实例化 "std::_LaunchPad<_Target>" 的引用
          with
          [
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,std::default_delete<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>>>
          ]
  c:\program files (x86)\microsoft visual studio\2017\professional\vc\tools\msvc\14.16.27023\include\thread(46): note: 参见对正在编译的函数 模板 实例化“void std::_Launch<std::unique_ptr<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,std::default_delete<_Ty>>>(_Thrd_t *,_Target &&)”的引用
          with
          [
              _Ty=std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,
              _Target=std::unique_ptr<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>,std::default_delete<std::tuple<void (__cdecl *)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64>>>
          ]
  d:\secretfile\code\new_reachable_tree\new_reachable_tree\main.cpp(32): note: 参见对正在编译的函数 模板 实例化“std::thread::thread<void(__cdecl &)(PetriNet &,int),std::reference_wrapper<PetriNet>,unsigned __int64,void>(_Fn,std::reference_wrapper<PetriNet> &&,unsigned __int64 &&)”的引用
          with
          [
              _Fn=void (__cdecl &)(PetriNet &,int)
          ]
  node.cpp
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(96): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(125): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(126): warning C4267: “初始化”: 从“size_t”转换到“int”，可能丢失数据
  正在生成代码...
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(163): warning C4172: 返回局部变量或临时变量的地址: temp
d:\secretfile\code\new_reachable_tree\new_reachable_tree\node.h(165): warning C4172: 返回局部变量或临时变量的地址: temp
  New_Reachable_Tree.vcxproj -> D:\SecretFiLe\Code\New_Reachable_Tree\x64\Debug\New_Reachable_Tree.exe
